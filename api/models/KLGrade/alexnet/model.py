#    This file was created by
#    MATLAB Deep Learning Toolbox Converter for TensorFlow Models.
#    31-Oct-2024 23:00:01

import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers

def create_model():
    data_unnormalized = keras.Input(shape=(227,227,3), name="data_unnormalized")
    data = keras.layers.Normalization(axis=(1,2,3), name="data_")(data_unnormalized)
    conv1 = layers.Conv2D(64, (3,3), strides=(2,2), name="conv1_")(data)
    relu_conv1 = layers.ReLU()(conv1)
    pool1 = layers.MaxPool2D(pool_size=(3,3), strides=(2,2))(relu_conv1)
    fire2_squeeze1x1 = layers.Conv2D(16, (1,1), name="fire2_squeeze1x1_")(pool1)
    fire2_relu_squeeze1x1 = layers.ReLU()(fire2_squeeze1x1)
    fire2_expand1x1 = layers.Conv2D(64, (1,1), name="fire2_expand1x1_")(fire2_relu_squeeze1x1)
    fire2_relu_expand1x1 = layers.ReLU()(fire2_expand1x1)
    fire2_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire2_relu_squeeze1x1)
    fire2_expand3x3 = layers.Conv2D(64, (3,3), name="fire2_expand3x3_")(fire2_expand3x3_prepadded)
    fire2_relu_expand3x3 = layers.ReLU()(fire2_expand3x3)
    fire2_concat = layers.Concatenate(axis=-1)([fire2_relu_expand1x1, fire2_relu_expand3x3])
    fire3_squeeze1x1 = layers.Conv2D(16, (1,1), name="fire3_squeeze1x1_")(fire2_concat)
    fire3_relu_squeeze1x1 = layers.ReLU()(fire3_squeeze1x1)
    fire3_expand1x1 = layers.Conv2D(64, (1,1), name="fire3_expand1x1_")(fire3_relu_squeeze1x1)
    fire3_relu_expand1x1 = layers.ReLU()(fire3_expand1x1)
    fire3_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire3_relu_squeeze1x1)
    fire3_expand3x3 = layers.Conv2D(64, (3,3), name="fire3_expand3x3_")(fire3_expand3x3_prepadded)
    fire3_relu_expand3x3 = layers.ReLU()(fire3_expand3x3)
    fire3_concat = layers.Concatenate(axis=-1)([fire3_relu_expand1x1, fire3_relu_expand3x3])
    pool3_prepadded = layers.ZeroPadding2D(padding=((0,1),(0,1)))(fire3_concat)
    pool3 = layers.MaxPool2D(pool_size=(3,3), strides=(2,2))(pool3_prepadded)
    fire4_squeeze1x1 = layers.Conv2D(32, (1,1), name="fire4_squeeze1x1_")(pool3)
    fire4_relu_squeeze1x1 = layers.ReLU()(fire4_squeeze1x1)
    fire4_expand1x1 = layers.Conv2D(128, (1,1), name="fire4_expand1x1_")(fire4_relu_squeeze1x1)
    fire4_relu_expand1x1 = layers.ReLU()(fire4_expand1x1)
    fire4_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire4_relu_squeeze1x1)
    fire4_expand3x3 = layers.Conv2D(128, (3,3), name="fire4_expand3x3_")(fire4_expand3x3_prepadded)
    fire4_relu_expand3x3 = layers.ReLU()(fire4_expand3x3)
    fire4_concat = layers.Concatenate(axis=-1)([fire4_relu_expand1x1, fire4_relu_expand3x3])
    fire5_squeeze1x1 = layers.Conv2D(32, (1,1), name="fire5_squeeze1x1_")(fire4_concat)
    fire5_relu_squeeze1x1 = layers.ReLU()(fire5_squeeze1x1)
    fire5_expand1x1 = layers.Conv2D(128, (1,1), name="fire5_expand1x1_")(fire5_relu_squeeze1x1)
    fire5_relu_expand1x1 = layers.ReLU()(fire5_expand1x1)
    fire5_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire5_relu_squeeze1x1)
    fire5_expand3x3 = layers.Conv2D(128, (3,3), name="fire5_expand3x3_")(fire5_expand3x3_prepadded)
    fire5_relu_expand3x3 = layers.ReLU()(fire5_expand3x3)
    fire5_concat = layers.Concatenate(axis=-1)([fire5_relu_expand1x1, fire5_relu_expand3x3])
    pool5_prepadded = layers.ZeroPadding2D(padding=((0,1),(0,1)))(fire5_concat)
    pool5 = layers.MaxPool2D(pool_size=(3,3), strides=(2,2))(pool5_prepadded)
    fire6_squeeze1x1 = layers.Conv2D(48, (1,1), name="fire6_squeeze1x1_")(pool5)
    fire6_relu_squeeze1x1 = layers.ReLU()(fire6_squeeze1x1)
    fire6_expand1x1 = layers.Conv2D(192, (1,1), name="fire6_expand1x1_")(fire6_relu_squeeze1x1)
    fire6_relu_expand1x1 = layers.ReLU()(fire6_expand1x1)
    fire6_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire6_relu_squeeze1x1)
    fire6_expand3x3 = layers.Conv2D(192, (3,3), name="fire6_expand3x3_")(fire6_expand3x3_prepadded)
    fire6_relu_expand3x3 = layers.ReLU()(fire6_expand3x3)
    fire6_concat = layers.Concatenate(axis=-1)([fire6_relu_expand1x1, fire6_relu_expand3x3])
    fire7_squeeze1x1 = layers.Conv2D(48, (1,1), name="fire7_squeeze1x1_")(fire6_concat)
    fire7_relu_squeeze1x1 = layers.ReLU()(fire7_squeeze1x1)
    fire7_expand1x1 = layers.Conv2D(192, (1,1), name="fire7_expand1x1_")(fire7_relu_squeeze1x1)
    fire7_relu_expand1x1 = layers.ReLU()(fire7_expand1x1)
    fire7_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire7_relu_squeeze1x1)
    fire7_expand3x3 = layers.Conv2D(192, (3,3), name="fire7_expand3x3_")(fire7_expand3x3_prepadded)
    fire7_relu_expand3x3 = layers.ReLU()(fire7_expand3x3)
    fire7_concat = layers.Concatenate(axis=-1)([fire7_relu_expand1x1, fire7_relu_expand3x3])
    fire8_squeeze1x1 = layers.Conv2D(64, (1,1), name="fire8_squeeze1x1_")(fire7_concat)
    fire8_relu_squeeze1x1 = layers.ReLU()(fire8_squeeze1x1)
    fire8_expand1x1 = layers.Conv2D(256, (1,1), name="fire8_expand1x1_")(fire8_relu_squeeze1x1)
    fire8_relu_expand1x1 = layers.ReLU()(fire8_expand1x1)
    fire8_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire8_relu_squeeze1x1)
    fire8_expand3x3 = layers.Conv2D(256, (3,3), name="fire8_expand3x3_")(fire8_expand3x3_prepadded)
    fire8_relu_expand3x3 = layers.ReLU()(fire8_expand3x3)
    fire8_concat = layers.Concatenate(axis=-1)([fire8_relu_expand1x1, fire8_relu_expand3x3])
    fire9_squeeze1x1 = layers.Conv2D(64, (1,1), name="fire9_squeeze1x1_")(fire8_concat)
    fire9_relu_squeeze1x1 = layers.ReLU()(fire9_squeeze1x1)
    fire9_expand1x1 = layers.Conv2D(256, (1,1), name="fire9_expand1x1_")(fire9_relu_squeeze1x1)
    fire9_relu_expand1x1 = layers.ReLU()(fire9_expand1x1)
    fire9_expand3x3_prepadded = layers.ZeroPadding2D(padding=((1,1),(1,1)))(fire9_relu_squeeze1x1)
    fire9_expand3x3 = layers.Conv2D(256, (3,3), name="fire9_expand3x3_")(fire9_expand3x3_prepadded)
    fire9_relu_expand3x3 = layers.ReLU()(fire9_expand3x3)
    fire9_concat = layers.Concatenate(axis=-1)([fire9_relu_expand1x1, fire9_relu_expand3x3])
    drop9 = layers.Dropout(0.500000)(fire9_concat)
    conv10 = layers.Conv2D(1000, (1,1), name="conv10_")(drop9)
    relu_conv10 = layers.ReLU()(conv10)
    pool10 = layers.GlobalAveragePooling2D(keepdims=True)(relu_conv10)
    prob = layers.Softmax()(pool10)
    probperm = layers.Permute((3,2,1))(prob)
    prob_flatten = layers.Flatten()(probperm)
    fc = layers.Dense(5, name="fc_")(prob_flatten)

    model = keras.Model(inputs=[data_unnormalized], outputs=[fc])
    return model
